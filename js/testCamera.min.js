/*!
 * Start Bootstrap - SB Admin 2 v4.1.4 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2024 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */

import*as params from"./params.js";import{isMobile}from"./util.js";class Camera{constructor(){this.webcam=document.getElementById("webcam"),this.canvasWebcam=document.getElementById("output"),this.ctx=this.canvasWebcam.getContext("2d")}static async setupCamera(t){var{targetFPS:e,sizeOption:t}=t,t=params.VIDEO_SIZE[t],t={audio:!1,video:{facingMode:"user",width:(isMobile()?params.VIDEO_SIZE["360 X 270"]:t).width,height:(isMobile()?params.VIDEO_SIZE["360 X 270"]:t).height,frameRate:{ideal:e}}};const i=new Camera;console.log(t.video.width,t.video.height);e=t.video.width,t=t.video.height;i.webcam.width=e,i.webcam.height=t,i.canvasWebcam.width=e,i.canvasWebcam.height=t;const a=document.querySelector(".canvas-wrapper");return a.style=`width: ${e}px; height: ${t}px`,i}drawCtx(){this.ctx.drawImage(this.webcam,0,0,this.webcam.width,this.webcam.height)}clearCtx(){this.ctx.clearRect(0,0,this.webcam.width,this.webcam.height)}drawResults(t){for(const e of t)this.drawResult(e)}drawResult(t){null!=t.keypoints&&(this.drawKeypoints(t.keypoints),this.drawSkeleton(t.keypoints))}drawKeypoints(t){var e=poseDetection.util.getKeypointIndexBySide(params.STATE.BlazePose);this.ctx.fillStyle="White",this.ctx.strokeStyle="White",this.ctx.lineWidth=params.DEFAULT_LINE_WIDTH;for(const i of e.middle)this.drawKeypoint(t[i],i);this.ctx.fillStyle="Green";for(const a of e.left)this.drawKeypoint(t[a],a);this.ctx.fillStyle="Orange";for(const s of e.right)this.drawKeypoint(t[s],s)}drawKeypoint(t,e){var i=null!=t.score?t.score:1;if((params.BLAZEPOSE_CONFIG.scoreThreshold||0)<=i&&e>=params.BLAZEPOSE_CONFIG.indexStart&&e<=params.BLAZEPOSE_CONFIG.indexEnd){const a=new Path2D;a.arc(t.x,t.y,params.DEFAULT_RADIUS,0,2*Math.PI),this.ctx.fill(a),this.ctx.stroke(a)}}drawSkeleton(o){this.ctx.fillStyle="White",this.ctx.strokeStyle="White",this.ctx.lineWidth=params.DEFAULT_LINE_WIDTH,poseDetection.util.getAdjacentPairs(params.STATE.BlazePose).forEach(([t,e])=>{var i=o[t],a=o[e],s=null!=i.score?i.score:1,r=null!=a.score?a.score:1,e=params.BLAZEPOSE_CONFIG.scoreThreshold||0;e<=s&&e<=r&&t>=params.BLAZEPOSE_CONFIG.indexStart&&t<=params.BLAZEPOSE_CONFIG.indexEnd&&(this.ctx.beginPath(),this.ctx.moveTo(i.x,i.y),this.ctx.lineTo(a.x,a.y),this.ctx.stroke())})}}export{Camera};